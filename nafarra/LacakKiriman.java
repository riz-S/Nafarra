/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nafarra;

import java.sql.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class LacakKiriman extends javax.swing.JFrame {

    private Connection connection;
    /**
     * Creates new form LacakKiriman
     */
    public LacakKiriman() {
        connectToDB();
        initComponents();
        setOrderIDField();
        populateStatusTableFromUserPage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        orderIDField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cekBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        statusTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(97, 140, 124));

        jLabel1.setFont(new java.awt.Font("Leelawadee UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(233, 235, 221));
        jLabel1.setText("LACAK KIRIMAN");

        orderIDField.setBackground(new java.awt.Color(233, 235, 221));
        orderIDField.setFont(new java.awt.Font("Leelawadee UI", 1, 10)); // NOI18N
        orderIDField.setForeground(new java.awt.Color(97, 140, 124));

        jLabel2.setFont(new java.awt.Font("Leelawadee UI", 1, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(233, 235, 221));
        jLabel2.setText("ORDER ID");

        cekBtn.setBackground(new java.awt.Color(206, 217, 126));
        cekBtn.setFont(new java.awt.Font("Leelawadee UI", 1, 10)); // NOI18N
        cekBtn.setForeground(new java.awt.Color(97, 140, 124));
        cekBtn.setText("CEK");
        cekBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cekBtnActionPerformed(evt);
            }
        });

        statusTable.setFont(new java.awt.Font("Leelawadee UI", 0, 10)); // NOI18N
        statusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(statusTable);

        backBtn.setBackground(new java.awt.Color(206, 217, 126));
        backBtn.setFont(new java.awt.Font("Leelawadee UI", 1, 10)); // NOI18N
        backBtn.setForeground(new java.awt.Color(97, 140, 124));
        backBtn.setText("KEMBALI");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 28, Short.MAX_VALUE)
                        .addComponent(backBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cekBtn))
                    .addComponent(orderIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(orderIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cekBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cekBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cekBtnActionPerformed
        // TODO add your handling code here:
        String orderID = orderIDField.getText();
        if(orderID.length() >= 6) {
            String subs = orderID.substring(0, 3);
            if(subs.equalsIgnoreCase("REG") || subs.equalsIgnoreCase("EXP")) {
                String query = "EXEC cekStatus ?";
                try {
                    PreparedStatement ps = connection.prepareStatement(query);
                    ps.setString(1, orderID);
                    ResultSet rs = ps.executeQuery();
                    ResultSetMetaData metaData = rs.getMetaData();
                    DefaultTableModel tm = (DefaultTableModel)statusTable.getModel();

                    Vector<String> columnNames = new Vector<String>();
                    int columnCount = metaData.getColumnCount();
                    for (int i = 1; i <= columnCount; i++) {
                        columnNames.add(metaData.getColumnName(i));
                    }

                    Vector<Vector<Object>> data = new Vector<Vector<Object>>();
                    while (rs.next()) {
                        Vector<Object> vector = new Vector<Object>();
                        for (int i = 1; i <= columnCount; i++) {
                            vector.add(rs.getObject(i));
                        }
                        data.add(vector);
                    }
                    tm.setDataVector(data, columnNames);
                    JOptionPane.showMessageDialog(this, "Lacak Kiriman berhasil!");
                } catch (SQLException throwables){
                    JOptionPane.showMessageDialog(this, "Terjadi Kesalahan Saat Melacak Kiriman!","Error...",
                    JOptionPane.ERROR_MESSAGE);
                    throwables.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Mohon masukan input yang sesuai!","Wrong Input!", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Mohon masukan input yang sesuai!","Wrong Input!", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
    }//GEN-LAST:event_cekBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void connectToDB() {
        String url = "jdbc:sqlserver://localhost:1433; databaseName=nafarra; integratedSecurity=true;";
        try {
            connection = DriverManager.getConnection(url);
            System.out.println("Connected to Database");

        } catch (SQLException throwables) {
            System.out.println("Oops, an error has occured");
            throwables.printStackTrace();
        }
    }
    
    private void populateStatusTableFromUserPage() {
        String orderID = UserPage.orderID;
        String query = "EXEC cekStatus ?";
            try {
                PreparedStatement ps = connection.prepareStatement(query);
                ps.setString(1, orderID);
                ResultSet rs = ps.executeQuery();
                ResultSetMetaData metaData = rs.getMetaData();
                DefaultTableModel tm = (DefaultTableModel)statusTable.getModel();

                Vector<String> columnNames = new Vector<String>();
                int columnCount = metaData.getColumnCount();
                for (int i = 1; i <= columnCount; i++) {
                    columnNames.add(metaData.getColumnName(i));
                }

                Vector<Vector<Object>> data = new Vector<Vector<Object>>();
                while (rs.next()) {
                    Vector<Object> vector = new Vector<Object>();
                    for (int i = 1; i <= columnCount; i++) {
                        vector.add(rs.getObject(i));
                    }
                    data.add(vector);
                }
                tm.setDataVector(data, columnNames);
            } catch (SQLException throwables){
                System.out.println("Oops, an error has occured");
                throwables.printStackTrace();
            }
    }
    
    private void setOrderIDField() {
        String txt = UserPage.orderID;
        orderIDField.setText(txt);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LacakKiriman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LacakKiriman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LacakKiriman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LacakKiriman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LacakKiriman().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton cekBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField orderIDField;
    private javax.swing.JTable statusTable;
    // End of variables declaration//GEN-END:variables
}
